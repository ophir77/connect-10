{"version":3,"file":"js/app/ui-config/navbar/index~js/app/ui-config/navigation/index~js/app/ui-config/notification/index~~00800807.js?id=51eef9143bd659836fd9","sources":["webpack:///./resources/js/mixins/ui-config-form.js"],"sourcesContent":["import * as ConfigAPI from '@api/config'\nimport { CollapseTransition } from 'vue2-transitions'\nimport { mapGetters, mapActions } from 'vuex'\nimport initialUiConfig from '@js/store/modules/sources/initial-ui-config'\n\nexport default {\n    components: {\n        CollapseTransition\n    },\n    data() {\n        return {\n            formData: {\n                ...initialUiConfig,\n                type: 'ui'\n            },\n            actions: {\n                'leftSidebarStyle': {\n                    'push-content': {\n                        leftSidebarBackdrop: false,\n                        leftSidebarShadow: false,\n                        leftSidebarShow: true,\n                    },\n                    'push': {\n                        leftSidebarShow: true,\n                    },\n                    'over': {\n                        leftSidebarBackdrop: true,\n                        leftSidebarShadow: true,\n                        leftSidebarShow: true,\n                    },\n                    'folded': {\n                        leftSidebarBackdrop: true,\n                        leftSidebarShow: false,\n                    },\n                    'off-canvas': {\n                        leftSidebarShow: true,\n                    },\n                },\n                topNavbarHide: {\n                    true: {\n                        leftSidebarHeight: 'full',\n                    },\n                },\n                leftSidebarHeight: {\n                    'normal': {\n                        topNavbarHide: false,\n                    },\n                },\n                pageHeaderIsBoxed: {\n                    true: {\n                        pageHeaderBackgroundColor: 'primary',\n                        colorScheme: 'custom',\n                    },\n                },\n                pageHeaderBackgroundColor: {\n                    'transparent': {\n                        pageHeaderIsBoxed: false,\n                    },\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                pageBackgroundColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                pageContainerBackgroundColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                leftSidebarColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                rightSidebarColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                modalSidebarColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                specialSidebarColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                topNavbarColor: {\n                    'any': {\n                        colorScheme: 'custom',\n                    },\n                },\n                colorScheme: {\n                    'default': {\n                        pageBackgroundColor: 'light',\n                        pageContainerBackgroundColor: 'white',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'dark-primary',\n                        leftSidebarLogoLight: true,\n                        rightSidebarColor: 'white',\n                        modalSidebarColor: 'white',\n                        specialSidebarColor: 'secondary',\n                        topNavbarColor: 'black',\n                        topNavbarLogoLight: true,\n                    },\n                    'white': {\n                        pageBackgroundColor: 'white',\n                        pageContainerBackgroundColor: 'white',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'white',\n                        leftSidebarLogoLight: false,\n                        rightSidebarColor: 'white',\n                        modalSidebarColor: 'white',\n                        specialSidebarColor: 'white',\n                        topNavbarColor: 'white',\n                        topNavbarLogoLight: false,\n                    },\n                    'light': {\n                        pageBackgroundColor: 'light',\n                        pageContainerBackgroundColor: 'white',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'white',\n                        leftSidebarLogoLight: false,\n                        rightSidebarColor: 'white',\n                        modalSidebarColor: 'white',\n                        specialSidebarColor: 'light',\n                        topNavbarColor: 'white',\n                        topNavbarLogoLight: false,\n                    },\n                    'dark': {\n                        pageBackgroundColor: 'black',\n                        pageContainerBackgroundColor: 'gray-darkest',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'gray-darkest',\n                        leftSidebarLogoLight: true,\n                        rightSidebarColor: 'gray-darkest',\n                        modalSidebarColor: 'black',\n                        specialSidebarColor: 'black',\n                        topNavbarColor: 'gray-darkest',\n                        topNavbarLogoLight: true,\n                    },\n                    'semi-dark': {\n                        pageBackgroundColor: 'gray-darkest',\n                        pageContainerBackgroundColor: 'gray-darker',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'dark-primary',\n                        leftSidebarLogoLight: true,\n                        rightSidebarColor: 'gray-darker',\n                        modalSidebarColor: 'gray-darker',\n                        specialSidebarColor: 'primary',\n                        topNavbarColor: 'black',\n                        topNavbarLogoLight: true,\n                    },\n                    'casual': {\n                        pageBackgroundColor: 'light',\n                        pageContainerBackgroundColor: 'white',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'primary',\n                        leftSidebarLogoLight: true,\n                        rightSidebarColor: 'white',\n                        modalSidebarColor: 'white',\n                        specialSidebarColor: 'success',\n                        topNavbarColor: 'dark-primary',\n                        topNavbarLogoLight: true,\n                    },\n                    'business': {\n                        pageBackgroundColor: 'light',\n                        pageContainerBackgroundColor: 'white',\n                        pageHeaderBackgroundColor: 'transparent',\n                        leftSidebarColor: 'gray-darkest',\n                        leftSidebarLogoLight: true,\n                        rightSidebarColor: 'white',\n                        modalSidebarColor: 'white',\n                        specialSidebarColor: 'white',\n                        topNavbarColor: 'white',\n                        topNavbarLogoLight: false,\n                    },\n                }\n            },\n            formErrors: {},\n            preRequisite: {},\n            colors: [\n                {\n                    key: 'primary',\n                    title: 'Primary'\n                }, {\n                    key: 'dark-primary',\n                    title: 'Dark Primary'\n                }, {\n                    key: 'secondary',\n                    title: 'Secondary'\n                }, {\n                    key: 'success',\n                    title: 'Success'\n                }, {\n                    key: 'info',\n                    title: 'Info'\n                }, {\n                    key: 'warning',\n                    title: 'Warning'\n                }, {\n                    key: 'danger',\n                    title: 'Danger'\n                }, {\n                    key: 'white',\n                    title: 'White'\n                }, {\n                    key: 'light',\n                    title: 'Light'\n                }, {\n                    key: 'dark',\n                    title: 'Dark'\n                }, {\n                    key: 'gray-darker',\n                    title: 'Darker'\n                }, {\n                    key: 'gray-darkest',\n                    title: 'Darkest'\n                }, {\n                    key: 'black',\n                    title: 'Black'\n                }\n            ],\n            colorSchemes: [\n                {\n                    key: 'default',\n                    title: 'Default'\n                },\n                {\n                    key: 'white',\n                    title: 'White'\n                },\n                {\n                    key: 'light',\n                    title: 'Light'\n                },\n                {\n                    key: 'dark',\n                    title: 'Dark'\n                },\n                {\n                    key: 'semi-dark',\n                    title: 'Semi Dark'\n                },\n                {\n                    key: 'casual',\n                    title: 'Casual'\n                },\n                {\n                    key: 'business',\n                    title: 'Business'\n                },\n            ],\n            initialFormData: null,\n            emptyFormData: null,\n            readyForAction: false,\n            isLoading: true,\n            getInitialDataCalled: false,\n        }\n    },\n    computed: {\n        ...mapGetters('config', [\n            'vars',\n            'uiConfigs',\n        ]),\n        computedFormData() {\n            return _.cloneDeep(this.formData)\n        }\n    },\n    watch: {\n        computedFormData: {\n            deep: true,\n            handler: _.debounce(function(v, o) {\n                if(this.readyForAction) {\n                    v = this.processActions(v, o)\n                    this.formData.objForEach((value, key) => {\n                        this.formData[key] = v[key]\n                    })\n                \n                    this.SetUiConfig(v)\n                }\n\n                if (typeof this.afterSettingConfig === \"function\") { \n                    this.$nextTick(() => {\n                        this.afterSettingConfig()\n                    })\n                }\n\n                this.readyForAction = true;\n            }, 500),\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('config', [\n            'SetUiConfig',\n        ]),\n        processActions(val, oldVal) {\n            this.actions.objForEach((actions, configKey) => {\n                if(val[configKey] !== oldVal[configKey]) {\n                    const toSet = actions[val[configKey]]\n                    if(toSet) {\n                        toSet.objForEach((value, key) => {\n                            val[key] = value\n                        })\n                    }\n                    const toSetOnAny = actions['any']\n                    if(toSetOnAny) {\n                        toSetOnAny.objForEach((value, key) => {\n                            val[key] = value\n                        })\n                    }\n                }\n            })\n            return val\n        },\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit() {\n            if (formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            ConfigAPI.update(this.formData)\n                .then(response => {\n                    this.GetConfig()\n                        .then(() => {\n                            this.isLoading = false\n                            if (this.getInitialDataCalled) {\n                                this.getInitialData()\n                            }\n                            this.$toasted.success(response.message, this.$toastConfig.success)\n                            this.initialFormData = Object.assign({}, this.formData)\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            formUtil.handleErrors(error)\n                        })\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, (agreed) => {\n                if(agreed) {\n                    this.SetUiConfig(this.initialFormData)\n                    next()\n                } else if(agreed !== false) {\n                    next()\n                }\n            })\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response[key] || value\n            })\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            if(this.uiConfigs) {\n                this.formData = formUtil.assignValues(this.formData, this.uiConfigs)\n            }\n            this.isLoading = false\n        }, \n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            this.getInitialDataCalled = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n                \n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy() {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAlBA;AAsBA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAzEA;AAlFA;AAyKA;AACA;AACA;AAEA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AA5PA;AA8PA;AACA;AAKA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AADA;AAucA;AACA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AA3GA;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5ZA;;;;A","sourceRoot":""}